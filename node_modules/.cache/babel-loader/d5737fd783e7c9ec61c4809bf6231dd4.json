{"ast":null,"code":"var _jsxFileName = \"/home/rexweb/React/wheather-app/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchWeather } from '../actions/fetchWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const getweatherInfoAction = city => dispatch(fetchWeather(city));\n\n  const [city, setCity] = useState();\n  const weatherSelector = useSelector(state => state.weatherInfo);\n  console.log(\"weatherSelector\", weatherSelector);\n\n  const getweatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No city to search\");\n    } else {\n      getweatherInfoAction(city);\n      console.log(city);\n    }\n  };\n\n  useEffect(() => {\n    getweatherInfoAction(\"Mohali\");\n  }, []);\n  let details = \"\";\n\n  if (weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")) {\n    details = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Weather Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherSelector.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: weatherSelector.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherSelector.main.temp, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getweatherInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather-App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter the city to check weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Check Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), details]\n  }, void 0, true);\n};\n\n_s(Form, \"xXb+jTKrpTtnB4jc80onYjwbXXM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/rexweb/React/wheather-app/src/components/Form.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchWeather","Form","dispatch","getweatherInfoAction","city","setCity","weatherSelector","state","weatherInfo","console","log","getweatherInfo","e","preventDefault","details","hasOwnProperty","name","sys","country","main","temp","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;;;;AACA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACd,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AACA,QAAMI,oBAAoB,GAAIC,IAAD,IAAUF,QAAQ,CAACF,YAAY,CAACI,IAAD,CAAb,CAA/C;;AAEA,QAAM,CAACA,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AAEA,QAAMU,eAAe,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,eAA/B;;AAEA,QAAMK,cAAc,GAAIC,CAAD,IAAM;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGT,IAAI,KAAK,EAAZ,EAAe;AACXK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAEK;AACDP,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH;AACJ,GARD;;AASAP,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,oBAAoB,CAAC,QAAD,CAApB;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,MAAIW,OAAO,GAAG,EAAd;;AACA,MAAGR,eAAe,CAACE,WAAhB,IAA+BF,eAAe,CAACE,WAAhB,CAA4BO,cAA5B,CAA2C,UAA3C,CAAlC,EAAyF;AACrFD,IAAAA,OAAO,gBAAG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAA,mBAAIR,eAAe,CAACU,IAApB,eACA;AAAA,oBAAOV,eAAe,CAACW,GAAhB,CAAoBC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,eAIN;AAAA,mBAAIZ,eAAe,CAACa,IAAhB,CAAqBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AAMH;;AAED,sBACI;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAET,cAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAO,UAAA,IAAI,EAAE,MAAb;AAAoB,UAAA,IAAI,EAAC,MAAzB;AAAgC,UAAA,QAAQ,EAAEC,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV,CAAtD;AAAwE,UAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAIU;AAAA;AAAA;AAAA;AAAA,cAJV,eAKI;AAAO,QAAA,IAAI,EAAE,QAAb;AAAsB,QAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAQCR,OARD;AAAA,kBADJ;AAcH,CA9CD;;GAAMb,I;UACeF,W,EAKOD,W;;;KANtBG,I;AAgDN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchWeather} from '../actions/fetchWeather';\nconst Form = () =>{\n    const dispatch = useDispatch()\n    const getweatherInfoAction = (city) => dispatch(fetchWeather(city))\n\n    const [city, setCity] = useState();\n\n    const weatherSelector = useSelector(state => state.weatherInfo)\n    console.log(\"weatherSelector\", weatherSelector)\n\n    const getweatherInfo = (e) =>{\n        e.preventDefault();\n        if(city === \"\"){\n            console.log(\"No city to search\")\n        }else{\n            getweatherInfoAction(city)\n            console.log(city)\n        }\n    }\n    useEffect(()=>{\n        getweatherInfoAction(\"Mohali\")\n    },[])\n\n    let details = \"\";\n    if(weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")){\n        details = <div className=\"details\">\n            <h4>Weather Details</h4>\n            <p>{weatherSelector.name}\n            <span>{weatherSelector.sys.country}</span></p>\n            <p>{weatherSelector.main.temp}Â°F</p>\n        </div>\n    }\n\n    return(\n        <>\n        <form onSubmit={getweatherInfo}>\n            <div className=\"control\">\n            <h1>Weather-App</h1>\n                <input type =\"text\" name=\"name\" onChange={e => setCity(e.target.value)} placeholder=\"Enter the city to check weather\"/>\n            </div><br></br>\n            <input type =\"submit\" value=\"Check Weather\"/>\n        </form>\n        {details}\n        </>\n\n\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}