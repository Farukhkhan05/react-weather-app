{"ast":null,"code":"var _jsxFileName = \"/home/rexweb/React/wheather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchWeather } from './actions/fetchWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState(false); //set city\n\n  const [city, setCity] = useState(\"\");\n  const weatherSelector = useSelector(state => state.weatherInfo);\n\n  const getweatherInfoAction = city => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getweatherInfoAction(city);\n  }, [city]);\n\n  const getweatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No city to search\");\n    } else {\n      getweatherInfoAction(city);\n      setToggle(true);\n      console.log(\"weatherSelector\", weatherSelector);\n    }\n  };\n\n  let details = \"\";\n\n  if (weatherSelector && toggle) {\n    details = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deatils\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherSelector.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: weatherSelector.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherSelector.main.temp, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: weatherSelector.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherSelector.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this);\n  } else {\n    details = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You need to type a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wheather-App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getweatherInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter the city to check weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Check Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), details]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"svqVrSRKI6UWljjsPxKdfrcSV/o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rexweb/React/wheather-app/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchWeather","App","dispatch","toggle","setToggle","city","setCity","weatherSelector","state","weatherInfo","getweatherInfoAction","getweatherInfo","e","preventDefault","console","log","details","name","sys","country","main","temp","weather","icon","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchWeather} from './actions/fetchWeather';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState(false)\n  \n  //set city\n  const [city, setCity] = useState(\"\")\n\n  const weatherSelector = useSelector((state)=> state.weatherInfo)\n  const getweatherInfoAction = (city) => dispatch(fetchWeather(city))\n\n  useEffect(() => {\n      getweatherInfoAction(city)\n  },[city])\n\n  const getweatherInfo = (e) =>{\n    e.preventDefault();\n    if(city === \"\"){\n      console.log(\"No city to search\")\n    }\n    else{\n      getweatherInfoAction(city)\n      setToggle(true)\n      console.log(\"weatherSelector\",weatherSelector)\n    }\n  }\n\n  let details = \"\";\n  if(weatherSelector && toggle){\n    details = <div className = \"deatils\" >\n      <h1>Weather Details</h1>\n      <p>\n        {weatherSelector.name}\n          <span >\n          {weatherSelector.sys.country}\n        </span>\n      </p>\n      <p>{weatherSelector.main.temp}Â°F</p>\n      <img src={weatherSelector.weather[0].icon}/>\n      <p>{weatherSelector.weather[0].main}</p>\n    </div>\n  }else{\n    details = <p>You need to type a city</p>\n  }\n\n  return (\n    <div className=\"App\" >\n      <h1>Wheather-App</h1>\n      <form onSubmit={getweatherInfo}>\n        <div className=\"control\">\n          <input type =\"text\" name=\"name\" onChange={e => setCity(e.target.value)} placeholder=\"Enter the city to check weather\"/>\n        </div><br></br>\n        <input type =\"submit\" value=\"Check Weather\"/>\n      </form>\n      {details}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}