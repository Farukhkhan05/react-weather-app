[{"/home/rexweb/React/wheather-app/src/index.js":"1","/home/rexweb/React/wheather-app/src/App.js":"2","/home/rexweb/React/wheather-app/src/store.js":"3","/home/rexweb/React/wheather-app/src/reducers/weatherReducer.js":"4","/home/rexweb/React/wheather-app/src/actions/fetchWeather.js":"5","/home/rexweb/React/wheather-app/src/reducers/reducer.js":"6","/home/rexweb/React/wheather-app/src/components/Form.js":"7"},{"size":328,"mtime":1617971968680,"results":"8","hashOfConfig":"9"},{"size":173,"mtime":1617954395730,"results":"10","hashOfConfig":"9"},{"size":716,"mtime":1617706259344,"results":"11","hashOfConfig":"9"},{"size":371,"mtime":1618310522215,"results":"12","hashOfConfig":"9"},{"size":542,"mtime":1617954398222,"results":"13","hashOfConfig":"9"},{"size":229,"mtime":1617631392797,"results":"14","hashOfConfig":"9"},{"size":2145,"mtime":1617976140051,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zh1xlz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/rexweb/React/wheather-app/src/index.js",[],["33","34"],"/home/rexweb/React/wheather-app/src/App.js",[],"/home/rexweb/React/wheather-app/src/store.js",[],"/home/rexweb/React/wheather-app/src/reducers/weatherReducer.js",["35"],"const weatherInfo = (state = {\n    weatherInfo : {}\n},action) =>{\n    console.log(\"action\",action)\n    \n    //check the action type\n    if(action.type = \"FETCH_WEATHER\"){\n        console.log(\"Action\",action)\n        console.log(state,\"dffcdfvcd\");\n        state = {...state, weatherInfo: action.payload\n        }\n        return state;\n    }\n}\n\nexport default weatherInfo;","/home/rexweb/React/wheather-app/src/actions/fetchWeather.js",[],"/home/rexweb/React/wheather-app/src/reducers/reducer.js",[],"/home/rexweb/React/wheather-app/src/components/Form.js",["36","37","38"],"import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchWeather} from '../actions/fetchWeather';\nimport { Button } from 'reactstrap';\nconst Form = () =>{\n    const dispatch = useDispatch()\n    const getweatherInfoAction = (city) => dispatch(fetchWeather(city))\n\n    const [city, setCity] = useState();\n\n    const weatherSelector = useSelector(state => state.weatherInfo)\n    console.log(\"weatherSelector\", weatherSelector)\n\n    const getweatherInfo = (e) =>{\n        e.preventDefault();\n        if(city == \"\"){\n            console.log(\"No city to search\")\n        }else{\n            getweatherInfoAction(city)\n            console.log(city)\n        }\n    }\n    useEffect(()=>{\n        getweatherInfoAction(\"Mohali\")\n    },[])\n\n    let details = \"\";\n    if(weatherSelector && weatherSelector.hasOwnProperty(\"name\")){\n        details = <div className=\"details\" style={{backgroundImage: `url(https://i.pinimg.com/originals/e9/d8/5b/e9d85b500365c9e3b7a5e717a534e07c.jpg)`}}>\n            <h4 style={{textAlign:'center'}}><u>Weather Details</u></h4>\n            <h3>{weatherSelector.message}</h3>\n            <p style={{textAlign:'center'}}>{weatherSelector.name}\n            <span style={{textAlign:'center'}}>{weatherSelector.sys.country}</span></p>\n            <p style={{textAlign:'center'}}>{weatherSelector.main.temp}Â°F</p>\n            <p style={{textAlign:'center'}}><img src={`http://openweathermap.org/img/w/${weatherSelector.weather[0].icon}.png`}/></p>\n        </div>\n    }\n\n    return(\n        <>\n        <form onSubmit={getweatherInfo}>\n            <div className=\"forecast\">\n            <div className=\"flex-forecast\">\n            <h1>Weather-App</h1>\n                <input type =\"text\" name=\"name\" onChange={e => setCity(e.target.value)} placeholder=\"Enter the city to check weather\"/>\n            <br></br>\n            {/* <input type =\"submit\" value=\"Check Weather\"/> */}\n            <Button type=\"submit\" className=\"btn btn-success\">CHECK WEATHER</Button>\n            </div>\n            </div>\n        </form>\n        {details}\n        </>\n\n\n    )\n}\n\nexport default Form;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":37},{"ruleId":"47","severity":1,"message":"48","line":16,"column":17,"nodeType":"49","messageId":"50","endLine":16,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":25,"column":7,"nodeType":"53","endLine":25,"endColumn":9,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":35,"column":45,"nodeType":"57","endLine":35,"endColumn":130},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getweatherInfoAction'. Either include it or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [getweatherInfoAction]",{"range":"63","text":"64"},[782,784],"[getweatherInfoAction]"]